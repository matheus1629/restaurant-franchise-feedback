server:
  port: 8080

spring:
  application:
    name: "feedbackscollector"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
    function:
      definition: feedbackCollected
    stream:
      bindings:
        feedbackCollected-in-0:
          destination: feedback-sent
          group: ${spring.application.name}
        sendFeedback-out-0:
          destination: send-feedback # exchange name
      kafka:
        binder:
          brokers:
            - localhost:9092

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "feedbackscollector"
    description: "Restaurant Franchise Feedbacks Collector Application"
    version: "1.0.0"

logging:
  level:
    com:
      restaurant:
        accounts: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
    #       %5p: 5 length character (warn, error, info, debbug)
    #            ${spring.application.name}: nome da applicação (accounts)
    #                                       %X{trace_id}: gerar o trace ID
    #                                                    %X{span_id}: gerar o span ID
resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

  resilience4j.retry:
    configs:
      default:
        maxRetryAttempts: 3
        waitDuration: 500
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        ignoreExceptions:
          - java.lang.NullPointerException
        retryExceptions:
          - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1
